## default param
library(ArchR)
###### scATAC workflow of Mouse_Female ######
library(argparse)
ProjDir <- file.path(getwd(),'Proj')
ProjDir
getwd()
FragmentsDir <- file.path(getwd(),'Fragments')
file.path('./Output', QC_file_name)
QC_file_name <- 'test.pdf'
file.path('./Output', QC_file_name)
## packed
source('/media/ggj/WHY/Project/UU_ATAC/Analysis/01_Cross_Species_ATAC/C57_Mouse/source_ArchR_cluster.R')
?addClusters
rm(list=ls())
gc()
## set dir
ProjDir <- file.path(getwd(),'Proj')
?getMarkers
?addGroupCoverages
rm(list=ls())
gc()
setwd("/media/ggj/WHY/Code/Code_for_repo/UUATAC")
library(ggplot2)
library(ggridges)
library(ggpubr)
library(ggsci)
library(hrbrthemes)
library(data.table)
library(ChIPseeker)
library(GenomicFeatures)
TxDb_Gecko <- makeTxDbFromGFF("/media/ggj/WHY/Project/UU_ATAC/Genome/Emac_v1/GTF_GFF/genomic.gtf")
TxDb_Axolotl <- makeTxDbFromGFF("/media/ggj/WHY/Project/UU_ATAC/Analysis/01_Cross_Species_ATAC/Axolotl/Axolotl_genome_pre/AmexG_ArchR_merge.gtf")
species <- 'Mouse'
require(TxDb.Mmusculus.UCSC.mm10.knownGene)
require(org.Mm.eg.db)
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
annodb <- "org.Mm.eg.db"
## set dir
inDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/Fig4_main/OpenRegion/q0.01'
picDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/Fig4_main/OpenRegion/Plot'
fname <- paste0(species,'_Global_ATAC_peaks.narrowPeak')
OP.df <- fread(file = paste(inDir,fname,sep = '/')) %>% as.data.frame()
## set dir
inDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/data/OR_global/q0.01'
picDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/Fig4_main/OpenRegion/Plot'
## set dir
inDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/data/OR_global/q0.01'
picDir <- '/media/ggj/WHY/Project/UU_ATAC/Figure/Fig4_main/OpenRegion/Plot'
fname <- paste0(species,'_Global_ATAC_peaks.narrowPeak')
OP.df <- fread(file = paste(inDir,fname,sep = '/')) %>% as.data.frame()
## keep normal chrom
if(species == 'Axolotl'){
print('Skip chrom filtering for Axolotl')
} else if(species == 'Gecko'){
idx <- grep('NW_',OP.df$V1)
OP.df <- OP.df[-idx,]
} else {
idx1 <- grep('chrU',OP.df$V1) # unlocalize
idx2 <- grep('random',OP.df$V1) # certain chrom but no direction
idx3 <- grep('alt',OP.df$V1) # haplotype polymorphism
idx <- c(idx1, idx2, idx3)
OP.df <- OP.df[-idx,]
}
## dedupliacted
OP.sub.df <- OP.df[,1:3]
OP.sub.df <- OP.sub.df[!duplicated(OP.sub.df),]
OP.sub.gr <- GRanges(OP.sub.df$V1, IRanges(OP.sub.df$V2, OP.sub.df$V3))
OP.sub.gr
peakAnno <- annotatePeak(OP.sub.gr, tssRegion=c(-3000, 0), TxDb = txdb, annoDb = annodb)
pdf(file = paste(picDir,species,'PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 6,height = 6)
species
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 6,height = 6)
plotAnnoPie(peakAnno)
dev.off()
## if species == 'Chicken'
anno.df <- getAnnoStat(peakAnno) %>% as.data.frame()
## merge 1st exon into exon, 1st intron into intron
anno.df <- getAnnoStat(peakAnno) %>% as.data.frame()
head(anno.df)
peakAnno@detailGenomicAnnotation
peakAnno@tssRegion
## merge 1st exon into exon, 1st intron into intron
anno.df <- peakAnno@anno %>% as.data.frame()
rm(anno.df)
## merge 1st exon into exon, 1st intron into intron
peakAnno@anno
peakAnno@anno$class <- peakAnno@anno$annotation
peakAnno@anno$class[grep('Intron',peakAnno@anno$class)] <- 'Intron'
peakAnno@anno$class[grep('Exon',peakAnno@anno$class)] <- 'Exon'
table(peakAnno@anno$class)
peakAnno.df <- peakAnno@anno %>% as.data.frame()
stat.size.df <- peakAnno.df[,c("width","class")]
rm(stat.size.df)
head(peakAnno.df)
peakAnno
freq.stat <- table(peakAnno.df$class) %>% as.data.frame()
freq.stat
freq.stat <- apply(freq.stat,MARGIN = 1,function(x) x/sum(freq.stat$Freq))
freq.stat <- lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq))
freq.stat
freq.stat <- table(peakAnno.df$class) %>% as.data.frame()
freq.stat
12922/sum(freq.stat$Freq)
5926/sum(freq.stat$Freq)
frac.stat <- lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq)) * 100 %>% as.numeric()
frac.stat <- lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq)) * 100
lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq))
lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq)) %>% unlist()
frac.stat <- lapply(freq.stat$Freq, function(x) x/sum(freq.stat$Freq)) %>% unlist() * 100
frac.stat
freq.stat
peakAnno
stat.df <- data.frame(Feature = freq.stat$Var1, Frequency = frac.stat)
stat.df
peakAnno
sum(freq.stat$Freq)
OP.sub.gr
stat.df
peakAnno
stat.df
plotAnnoPie(stat.df)
source('/media/ggj/WHY/Code/source/annoPie_ChIPseeker.R')
annoPie(stat.df)
annoPie(stat.df, legend.position = 'right')
?annoPie
View(annoPie)
library(RColorBrewer)
library(scales)
mycolor <- brewer.pal(8,'Set3')
show_col(mycolor)
display.brewer.all(type = 'all')
mycolor <- brewer.pal(8,'Set1')
show_col(mycolor)
pal_element <- c("#FB9A99","#33A02C","#FFD92F","#6A3D9A","#FDBF6F",
"#CAB2D6","#A6CEE3","#1F78B4","#B2DF8A")
show_col(pal_element)
mycolor <- brewer.pal(8,'Paired')
show_col(pal_element)
show_col(mycolor)
display.brewer.all(type = 'all')
mycolor <- brewer.pal(12,'Paired')
show_col(mycolor)
mycolor
pal_element <- c("#FB9A99","#E31A1C","#A6CEE3","#1F78B4","#33A02C",
"#B2DF8A","#CAB2D6","#FF7F00","#FDBF6F")
names(pal_element) <- c("3' UTR","5' UTR","Distal Intergenic","Downstream (<=300bp)","Exon",
"Intron","Promoter (<=1kb)","Promoter (1-2kb)","Promoter (2-3kb)")
annoPie(stat.df, legend.position = 'right',col = pal_element)
rm(mycolor)
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 6,height = 6)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 10,height = 10)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 12,height = 12)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 15,height = 15)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 15,height = 10)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
pdf(file = paste(picDir,'1_Mouse','PeakAnnoPie_deduplicated_-3000to0.pdf',sep = '/'),width = 8,height = 5)
annoPie(stat.df, legend.position = 'right',col = pal_element)
dev.off()
## ggridges (better)
library(ggridges)
stat.size.df <- peakAnno.df[,c("width","class")]
stat.size.df
## ggridges (better)
library(ggridges)
pal_element
saveRDS(pal_element, file = '/media/ggj/WHY/Project/UU_ATAC/Code/pal_PeakClass_20231108.rds')
## ggridges (better)
library(ggridges)
stat.size.df$class <- factor(stat.size.df$class,
levels = c("Promoter (<=1kb)","Promoter (1-2kb)","Promoter (2-3kb)",
"5' UTR","3' UTR","Exon","Intron",
"Downstream (<=300bp)","Distal Intergenic"))
p2 <- ggplot(stat.size.df, aes(x = width, y = class, fill = class)) +
geom_density_ridges_gradient() +
geom_density_ridges(
alpha = .2
# jittered_points=TRUE, scale = .95, rel_min_height = .01,
# point_shape = "|", point_size = 3, size = 0.25,
# position = position_points_jitter(height = 0)
) +
# scale_x_continuous(expand = c(0.01, 0))+ # 扩展下横轴和纵轴
# scale_y_discrete(expand = c(0.01,0))+
scale_fill_manual(values = pal_element) +
# scale_color_manual(values = pal_element) +
labs(x = 'Size of Open Region',
title = paste0(species,' OpenRegion Size'),
subtitle = "group by Open Region Class")+
theme_ridges(font_size = 13, grid = FALSE)+
theme(axis.title.y = element_blank())
p2
picDir
pdf(file = paste(picDir,'1_Mouse','OpenRegion_size-mergeRidges_20231108.pdf',sep = '/'),width = 8,height = 6)
print(p2)
dev.off()
pdf(file = paste(picDir,'1_Mouse','OpenRegion_size-mergeRidges_-3000to0.pdf',sep = '/'),width = 8,height = 6)
print(p2)
dev.off()
rm(list=ls())
gc()
